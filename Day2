字符串和编码

Unicode把所有语言都统一到一套编码里，这样就不会再有乱码问题了。

本着节约的精神，又出现了把Unicode编码转化为“可变长编码”的UTF-8编码。UTF-8编码把一个Unicode字符根据不同的数字大小编码成1-6个字节，常用的英文字母被编码成1个字节，汉字通常是3个字节，只有很生僻的字符才会被编码成4-6个字节。如果你要传输的文本包含大量英文字符，用UTF-8编码就能节省空间：

现在计算机系统通用的字符编码工作方式：

在计算机内存中，统一使用Unicode编码，当需要保存到硬盘或者需要传输的时候，就转换为UTF-8编码。
用记事本编辑的时候，从文件读取的UTF-8字符被转换为Unicode字符到内存里，编辑完成后，保存的时候再把Unicode转换为UTF-8保存到文件

浏览网页的时候，服务器会把动态生成的Unicode内容转换为UTF-8再传输到浏览器：


%d	整数
%f	浮点数
%s	字符串
%x	十六进制整数

#!/usr/bin/env python3
# -*- coding: utf-8 -*-
print('中文','\u4e2d\u6587')
ord('中')
'中'.encode('utf-8')
b'ABC'.decode('ascii')

len('中文')
'hello,%s' %'hao'

s1=72
s2=85
r=(s2/s1-1)*100
print('%.1f%%' %r)

######list and tuple#######
classmates=['Mike','hao','qqqq']
classmates. append('adam')

classmates. insert(1,'pp')
classmates.pop()
classmates[1]='opp'

d=['e','f']
c=['a','b','c',d]

t=('a','b',['A','B'])
t[2][0]='X'
t[2][1]='Y'

L = [
    ['Apple', 'Google', 'Microsoft'],
    ['Java', 'Python', 'Ruby', 'PHP'],
    ['Adam', 'Bart', 'Lisa']
]

print(L[0][0])
print(L[1][1])
print(L[2][2])





