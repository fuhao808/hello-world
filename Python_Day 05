# -*- coding: utf-8 -*-
L=[]
n=1
while n<=99:
	L.append(n)
	n=n+2
#####切片
L = ['Michael', 'Sarah', 'Tracy', 'Bob', 'Jack']

L[0:3] #####3 is not included
['Michael', 'Sarah', 'Tracy']

L=list[range(100)]
L[:10:2]
L[::5]
(0,1,2,3,4)[:3]
'ABCDEFG'[::2]
######迭代 Iteration
d={'a':1,'b':2,'c':3}
for i in d:
    print(i)

from collection import Iterable
isinstance('abc', Iterable)

#做索引，123
for i,value in enumerate(['a','b','c']):
    print(i,value)

for i, value in enumerate([['a1','a2'],['b1','b2'],['c1','c2']]):
    print(i, value)
#list comprehensions
[x*x for x in range(1,11) if x%2==0]	
[m + n for m in 'ABC' for n in 'XYZ']

import os # 导入os模块，模块的概念后面讲到
[d for d in os.listdir('.')] # os.listdir可以列出文件和目录
 
d = {'x': 'A', 'y': 'B', 'z': 'C' }
[k + '=' + v for k, v in d.items()]

L = ['Hello', 'World', 'IBM', 'Apple']
[s.lower() for s in L] # 变小写

L1 = ['Hello', 'World', 18, 'Apple', None]
L2= [s.lower() for s in L1 if isinstance(s, str) is True]
print(L2)

#生成器 Generator
g=(x*x for x in range(10))
next(g)

for n in g:
	print(n)

def fib(max):
	n,a,b=0,0,1
	while n<max:
		yield(b)
		a,b=b,a+b
		n=n+1
	return 'done'

g=fib(6)
while True:
	try:
		x=next(g)
		print('g:',x)
	except StopIteration as e:
		print('Generator return value', e.value)
		break
def triangles(max):
    n,a=0,[1]
    while n<max:
        yield(a)
        a.append(0)
        a=[a[i-1]+a[i] for i in range(len(a))]
    return 'done'
n = 0
for t in triangles(10):
    print(t)
    n = n + 1
    if n == 10:
        break
